version: '3.8'

services:
  # Service untuk Aplikasi PHP
  web:
    build:
      context: ../app-crud # Path ke direktori yang berisi Dockerfile dan kode aplikasi
      dockerfile: Dockerfile
    container_name: php_apache_app
    ports:
      - "8080:80" # Map port 8080 di host ke port 80 di container web
    volumes:
      - ./app_crud:/var/www/html/ # Sinkronisasi kode dari host ke container (untuk development)
    depends_on:
      - db # Aplikasi web akan menunggu service db siap
    restart: unless-stopped
    networks:
      - app-network

  # Service untuk Database MySQL
  db:
    image: mysql:8.0 # Gunakan image MySQL resmi
    container_name: mysql_db
    ports:
      - "3306:3306" # Map port 3306 di host ke port 3306 di container db (opsional, untuk akses dari host)
    environment:
      MYSQL_DATABASE: db_produk
      MYSQL_USER: user_produk
      MYSQL_PASSWORD: password_produk # Ganti dengan password yang kuat
      MYSQL_ROOT_PASSWORD: root_password_kuat # Ganti dengan password root yang kuat
    volumes:
      - db_data:/var/lib/mysql # Volume untuk persistensi data MySQL
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data: # Definisi volume untuk data MySQL